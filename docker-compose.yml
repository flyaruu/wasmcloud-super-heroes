version: '3.8'

services:
  nats:
    image: nats:2.10-alpine
    container_name: nats
    ports:
      - "4222:4222"   # Client connections
      - "8222:8222"   # Monitoring endpoint
    command: ["-js", "-m", "8222"]
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  wasmcloud:
    image: wasmcloud/wasmcloud:latest
    container_name: wasmcloud_host
    depends_on:
      nats:
        condition: service_healthy
    environment:
      WASMCLOUD_NATS_HOST: nats
      WASMCLOUD_NATS_PORT: 4222
      WASMCLOUD_LATTICE: default
      WASMCLOUD_ALLOW_FILE_LOAD: "true"
      WASMCLOUD_OCI_ALLOWED_INSECURE: "registry:5000"
      RUST_LOG: debug
    ports:
      - "4000:4000"
      - "8000:8000"
    volumes:
      - ${PWD}/wasmcloud_data:/root/.wasmcloud

  wadm:
    image: ghcr.io/wasmcloud/wadm:latest
    container_name: wadm
    depends_on:
      nats:
        condition: service_healthy
    environment:
      WADM_NATS_SERVER: nats:4222
      WADM_JS_DOMAIN: wasmcloud
      RUST_LOG: info
    ports:
      - "8081:8080"

  heroes-db:
    image: postgres:16
    container_name: heroes-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: superman
      POSTGRES_PASSWORD: superman
      POSTGRES_DB: heroes_database
    volumes:
      - ${PWD}/database/heroes-db/init:/docker-entrypoint-initdb.d
  villains-db:
    image: postgres:16
    container_name: villains-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: superman
      POSTGRES_PASSWORD: superman
      POSTGRES_DB: villains_database
    volumes:
      - ${PWD}/database/villains-db/init:/docker-entrypoint-initdb.d
  locations-db:
    image: mariadb:11.5
    container_name: locations-db
    ports:
      - "3306:3306"
    environment:
      MARIADB_USER: locations
      MARIADB_PASSWORD: locations
      MARIADB_DATABASE: locations_database
      MARIADB_ROOT_PASSWORD: locations
      MARIADB_SKIP_TEST_DB: yes
    volumes:
      - ${PWD}/database/locations-db/init:/docker-entrypoint-initdb.d
  registry:
    image: registry:2
    restart: always
    ports:
      - "5001:5000"
    environment:
      # allows you to delete blobs via the HTTP API if you need to clean up
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
    volumes:
      # persists your registry data on the host
      - ${PWD}/registry_data:/var/lib/registry
  ubuntu:
    image: ubuntu
    restart: on-failure
    command: ["sleep","infinity"]